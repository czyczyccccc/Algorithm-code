#include<iostream>
using namespace std;
class Highprecision
{
    private:
    int  number1[1000];  //被加数，被减数
    int number2[1000];   //加数...
    int muti[2000];      //乘法..
    void string_int(const char * arr ,int n)
    {
        number2[0]=n;
        for(int i=1,j=n-1;i<=n;i++,j--)
        {
            number2[i]=arr[j]-'0';
        }
    }
    int compare()
    {
        if(number1[0]>number2[0])
        {
            return 1;
        }
        else if(number1[0]<number2[0])
        {
            return -1;
        }
        else
        {
            for(int i=number1[0];i>0;i--)
            {
                if(number1[i]>number2[i])
                {
                    return 1;
                }
                else if(number1[i]<number2[i])
                {
                    return -1;
                }
            }
            return 0;
        }
    }
    //打印
    void print(int *number1)
    {
        for(int i=number1[0];i>0;i--)
        {
            cout<<number1[i];
        }
    }
    public:
    //初始化
    Highprecision(char *arr,int n)
    {
        number1[0]=n;
        for(int i=1,j=n-1;i<=n;i++,j--)
        {
            
            number1[i]=arr[j]-'0';
        }
        for(int i=n+1;i<1000;i++)
        {
            number1[i]=0;
        }
        for(int i=0;i<1000;i++)
        {
            number2[i]=0;
        }
        for(int i=0;i<2000;i++)
        {
            muti[i]=0;
        }
    }
    //加法
    void addition(const char * arr ,int n)
    {
        int temp,k=0;
        string_int(arr,n);
        if(number1[0]>=n)
        {
            number1[0]++;
        }
        else
        {
            number1[0]=number2[0]+1;
        }
        for(int i=1;i<=number1[0];i++)
        {
            temp=number1[i]+number2[i]+k;
            number1[i]=temp%10;
            k=temp/10;
        }
        while(number1[number1[0]]==0)
        {
            number1[0]--;
        }
        print(number1);
    }
    
    //减法
    void subtraction(const char * arr ,int n)
    {
        int k=0;
        string_int(arr,n);
        int res=compare();
        if(res==0)
        {
            cout<<0;
            return;
        }
        else if(res==1)
        {
            for(int i=1;i<=number1[0];i++)
            {
                if(number1[i]+k>=number2[i])
                {
                    number1[i]=number1[i]+k-number2[i];
                    k=0;
                }
                else
                {
                    number1[i]=number1[i]+k+10-number2[i];
                    k=-1;
                }
            }
            
        }
        else
        {
            number1[0]=number2[0];
            for(int i=1;i<=number2[0];i++)
            {
                if(number2[i]+k>=number1[i])
                {
                    number1[i]=number2[i]+k-number1[i];
                    k=0;
                }
                else
                {
                    number1[i]=number2[i]+k+10-number1[i];
                    k=-1;
                }
            }
        }
        while(number1[number1[0]]==0)
        {
            number1[0]--;
        }
        if(res==-1)
        {
            cout<<'-';
        }
        print(number1);
    }
    
    //乘法
    void multiplication(const char *arr ,int n)
    {
        string_int(arr,n);
        for(int i=1;i<=number1[0];i++)
        {
            for(int j=1;j<=number2[0];j++)
            {
                muti[i+j-1]+=number1[i]*number2[j];
                if(muti[i+j-1]>=10)
                {
                    muti[i+j]+=muti[i+j-1]/10;
                    muti[i+j-1]=muti[i+j-1]%10;
                }
            }
        }
        muti[0]=number1[0]+number2[0];
        while(muti[muti[0]]==0)
        {
            muti[0]--;
        }
        print(muti);
    }
    
    
};

int main()
{
    Highprecision h("7",1);
    h.multiplication("22",2);

    return 0;
}
